
Thermometer.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800200  00800200  0000073e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000006ca  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000c  00800200  00800200  0000073e  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000073e  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000770  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000090  00000000  00000000  000007b0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000f07  00000000  00000000  00000840  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000d24  00000000  00000000  00001747  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000005a3  00000000  00000000  0000246b  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000015c  00000000  00000000  00002a10  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000060a  00000000  00000000  00002b6c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000001f9  00000000  00000000  00003176  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000060  00000000  00000000  0000336f  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
   2:	00 00       	nop
   4:	81 c0       	rjmp	.+258    	; 0x108 <__bad_interrupt>
   6:	00 00       	nop
   8:	7f c0       	rjmp	.+254    	; 0x108 <__bad_interrupt>
   a:	00 00       	nop
   c:	7d c0       	rjmp	.+250    	; 0x108 <__bad_interrupt>
   e:	00 00       	nop
  10:	7b c0       	rjmp	.+246    	; 0x108 <__bad_interrupt>
  12:	00 00       	nop
  14:	79 c0       	rjmp	.+242    	; 0x108 <__bad_interrupt>
  16:	00 00       	nop
  18:	77 c0       	rjmp	.+238    	; 0x108 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	75 c0       	rjmp	.+234    	; 0x108 <__bad_interrupt>
  1e:	00 00       	nop
  20:	73 c0       	rjmp	.+230    	; 0x108 <__bad_interrupt>
  22:	00 00       	nop
  24:	71 c0       	rjmp	.+226    	; 0x108 <__bad_interrupt>
  26:	00 00       	nop
  28:	6f c0       	rjmp	.+222    	; 0x108 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	6d c0       	rjmp	.+218    	; 0x108 <__bad_interrupt>
  2e:	00 00       	nop
  30:	6b c0       	rjmp	.+214    	; 0x108 <__bad_interrupt>
  32:	00 00       	nop
  34:	69 c0       	rjmp	.+210    	; 0x108 <__bad_interrupt>
  36:	00 00       	nop
  38:	67 c0       	rjmp	.+206    	; 0x108 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	65 c0       	rjmp	.+202    	; 0x108 <__bad_interrupt>
  3e:	00 00       	nop
  40:	63 c0       	rjmp	.+198    	; 0x108 <__bad_interrupt>
  42:	00 00       	nop
  44:	00 c1       	rjmp	.+512    	; 0x246 <__vector_17>
  46:	00 00       	nop
  48:	5f c0       	rjmp	.+190    	; 0x108 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	5d c0       	rjmp	.+186    	; 0x108 <__bad_interrupt>
  4e:	00 00       	nop
  50:	5b c0       	rjmp	.+182    	; 0x108 <__bad_interrupt>
  52:	00 00       	nop
  54:	59 c0       	rjmp	.+178    	; 0x108 <__bad_interrupt>
  56:	00 00       	nop
  58:	57 c0       	rjmp	.+174    	; 0x108 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	55 c0       	rjmp	.+170    	; 0x108 <__bad_interrupt>
  5e:	00 00       	nop
  60:	53 c0       	rjmp	.+166    	; 0x108 <__bad_interrupt>
  62:	00 00       	nop
  64:	51 c0       	rjmp	.+162    	; 0x108 <__bad_interrupt>
  66:	00 00       	nop
  68:	4f c0       	rjmp	.+158    	; 0x108 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	4d c0       	rjmp	.+154    	; 0x108 <__bad_interrupt>
  6e:	00 00       	nop
  70:	4b c0       	rjmp	.+150    	; 0x108 <__bad_interrupt>
  72:	00 00       	nop
  74:	b3 c0       	rjmp	.+358    	; 0x1dc <__vector_29>
  76:	00 00       	nop
  78:	47 c0       	rjmp	.+142    	; 0x108 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	45 c0       	rjmp	.+138    	; 0x108 <__bad_interrupt>
  7e:	00 00       	nop
  80:	43 c0       	rjmp	.+134    	; 0x108 <__bad_interrupt>
  82:	00 00       	nop
  84:	41 c0       	rjmp	.+130    	; 0x108 <__bad_interrupt>
  86:	00 00       	nop
  88:	3f c0       	rjmp	.+126    	; 0x108 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	3d c0       	rjmp	.+122    	; 0x108 <__bad_interrupt>
  8e:	00 00       	nop
  90:	3b c0       	rjmp	.+118    	; 0x108 <__bad_interrupt>
  92:	00 00       	nop
  94:	39 c0       	rjmp	.+114    	; 0x108 <__bad_interrupt>
  96:	00 00       	nop
  98:	37 c0       	rjmp	.+110    	; 0x108 <__bad_interrupt>
  9a:	00 00       	nop
  9c:	35 c0       	rjmp	.+106    	; 0x108 <__bad_interrupt>
  9e:	00 00       	nop
  a0:	33 c0       	rjmp	.+102    	; 0x108 <__bad_interrupt>
  a2:	00 00       	nop
  a4:	31 c0       	rjmp	.+98     	; 0x108 <__bad_interrupt>
  a6:	00 00       	nop
  a8:	2f c0       	rjmp	.+94     	; 0x108 <__bad_interrupt>
  aa:	00 00       	nop
  ac:	2d c0       	rjmp	.+90     	; 0x108 <__bad_interrupt>
  ae:	00 00       	nop
  b0:	2b c0       	rjmp	.+86     	; 0x108 <__bad_interrupt>
  b2:	00 00       	nop
  b4:	29 c0       	rjmp	.+82     	; 0x108 <__bad_interrupt>
  b6:	00 00       	nop
  b8:	27 c0       	rjmp	.+78     	; 0x108 <__bad_interrupt>
  ba:	00 00       	nop
  bc:	25 c0       	rjmp	.+74     	; 0x108 <__bad_interrupt>
  be:	00 00       	nop
  c0:	23 c0       	rjmp	.+70     	; 0x108 <__bad_interrupt>
  c2:	00 00       	nop
  c4:	21 c0       	rjmp	.+66     	; 0x108 <__bad_interrupt>
  c6:	00 00       	nop
  c8:	1f c0       	rjmp	.+62     	; 0x108 <__bad_interrupt>
  ca:	00 00       	nop
  cc:	1d c0       	rjmp	.+58     	; 0x108 <__bad_interrupt>
  ce:	00 00       	nop
  d0:	1b c0       	rjmp	.+54     	; 0x108 <__bad_interrupt>
  d2:	00 00       	nop
  d4:	19 c0       	rjmp	.+50     	; 0x108 <__bad_interrupt>
  d6:	00 00       	nop
  d8:	17 c0       	rjmp	.+46     	; 0x108 <__bad_interrupt>
  da:	00 00       	nop
  dc:	15 c0       	rjmp	.+42     	; 0x108 <__bad_interrupt>
  de:	00 00       	nop
  e0:	13 c0       	rjmp	.+38     	; 0x108 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
  e4:	11 24       	eor	r1, r1
  e6:	1f be       	out	0x3f, r1	; 63
  e8:	cf ef       	ldi	r28, 0xFF	; 255
  ea:	d1 e2       	ldi	r29, 0x21	; 33
  ec:	de bf       	out	0x3e, r29	; 62
  ee:	cd bf       	out	0x3d, r28	; 61
  f0:	00 e0       	ldi	r16, 0x00	; 0
  f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_clear_bss>:
  f4:	22 e0       	ldi	r18, 0x02	; 2
  f6:	a0 e0       	ldi	r26, 0x00	; 0
  f8:	b2 e0       	ldi	r27, 0x02	; 2
  fa:	01 c0       	rjmp	.+2      	; 0xfe <.do_clear_bss_start>

000000fc <.do_clear_bss_loop>:
  fc:	1d 92       	st	X+, r1

000000fe <.do_clear_bss_start>:
  fe:	ac 30       	cpi	r26, 0x0C	; 12
 100:	b2 07       	cpc	r27, r18
 102:	e1 f7       	brne	.-8      	; 0xfc <.do_clear_bss_loop>
 104:	cd d0       	rcall	.+410    	; 0x2a0 <main>
 106:	df c2       	rjmp	.+1470   	; 0x6c6 <_exit>

00000108 <__bad_interrupt>:
 108:	7b cf       	rjmp	.-266    	; 0x0 <__vectors>

0000010a <time_init>:

void time_init(void)
{
	//Timer
	// set up timer with prescaler = 256 and CTC mode
	TCCR1B |= _BV(WGM12)| _BV(CS12);
 10a:	e1 e8       	ldi	r30, 0x81	; 129
 10c:	f0 e0       	ldi	r31, 0x00	; 0
 10e:	80 81       	ld	r24, Z
 110:	8c 60       	ori	r24, 0x0C	; 12
 112:	80 83       	st	Z, r24
	
	// initialize counter
	TCNT1 = 0;
 114:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7c0085>
 118:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7c0084>
	
	// initialize compare value
	OCR1A = 62499;
 11c:	83 e2       	ldi	r24, 0x23	; 35
 11e:	94 ef       	ldi	r25, 0xF4	; 244
 120:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7c0089>
 124:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7c0088>
	
	// enable compare interrupt
	TIMSK1 |= _BV(OCIE1A);
 128:	ef e6       	ldi	r30, 0x6F	; 111
 12a:	f0 e0       	ldi	r31, 0x00	; 0
 12c:	80 81       	ld	r24, Z
 12e:	82 60       	ori	r24, 0x02	; 2
 130:	80 83       	st	Z, r24
		
	// enable global interrupts
	sei();
 132:	78 94       	sei
 134:	08 95       	ret

00000136 <adc_init>:


void adc_init()
{
	// Select input:PK7 is ADC15
	DDRK &= ~_BV(PK7);
 136:	e7 e0       	ldi	r30, 0x07	; 7
 138:	f1 e0       	ldi	r31, 0x01	; 1
 13a:	80 81       	ld	r24, Z
 13c:	8f 77       	andi	r24, 0x7F	; 127
 13e:	80 83       	st	Z, r24
	
	DDRG |= _BV(PG0);
 140:	83 b3       	in	r24, 0x13	; 19
 142:	81 60       	ori	r24, 0x01	; 1
 144:	83 bb       	out	0x13, r24	; 19

	// And select channel 15 and Set AVCC with external capacitor at AREF pin
	ADMUX |= _BV(REFS0) | _BV(MUX2) | _BV(MUX1) | _BV(MUX0);
 146:	ec e7       	ldi	r30, 0x7C	; 124
 148:	f0 e0       	ldi	r31, 0x00	; 0
 14a:	80 81       	ld	r24, Z
 14c:	87 64       	ori	r24, 0x47	; 71
 14e:	80 83       	st	Z, r24
	ADCSRB |= _BV(MUX5);
 150:	eb e7       	ldi	r30, 0x7B	; 123
 152:	f0 e0       	ldi	r31, 0x00	; 0
 154:	80 81       	ld	r24, Z
 156:	88 60       	ori	r24, 0x08	; 8
 158:	80 83       	st	Z, r24

	ADCSRB |= _BV(ADTS2) | _BV(ADTS0);
 15a:	80 81       	ld	r24, Z
 15c:	85 60       	ori	r24, 0x05	; 5
 15e:	80 83       	st	Z, r24
	ADCSRA |= _BV(ADEN) | _BV(ADATE) | _BV(ADIE) | _BV(ADPS0) | _BV(ADPS1) | _BV(ADPS2);
 160:	ea e7       	ldi	r30, 0x7A	; 122
 162:	f0 e0       	ldi	r31, 0x00	; 0
 164:	80 81       	ld	r24, Z
 166:	8f 6a       	ori	r24, 0xAF	; 175
 168:	80 83       	st	Z, r24
	
	
	PORTG |= _BV(PG0);
 16a:	84 b3       	in	r24, 0x14	; 20
 16c:	81 60       	ori	r24, 0x01	; 1
 16e:	84 bb       	out	0x14, r24	; 20
 170:	08 95       	ret

00000172 <adc_read>:
	
}

void adc_read()
{
	ADCSRA |= _BV(ADSC);  /* Start the ADC conversion by setting ADSC bit */
 172:	ea e7       	ldi	r30, 0x7A	; 122
 174:	f0 e0       	ldi	r31, 0x00	; 0
 176:	80 81       	ld	r24, Z
 178:	80 64       	ori	r24, 0x40	; 64
 17a:	80 83       	st	Z, r24
	
	/* Wait till the conversion is over */
	while(ADCSRA&(1<<ADSC))
 17c:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7c007a>
 180:	86 fd       	sbrc	r24, 6
 182:	fc cf       	rjmp	.-8      	; 0x17c <adc_read+0xa>
	{

	}
}
 184:	08 95       	ret

00000186 <temp_convertToCelcius>:

int16_t temp_convertToCelcius()
{
	degree=((((float)ADC*50/1024)*100)-500)/10;
 186:	60 91 78 00 	lds	r22, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7c0078>
 18a:	70 91 79 00 	lds	r23, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7c0079>
 18e:	80 e0       	ldi	r24, 0x00	; 0
 190:	90 e0       	ldi	r25, 0x00	; 0
 192:	a8 d1       	rcall	.+848    	; 0x4e4 <__floatunsisf>
 194:	20 e0       	ldi	r18, 0x00	; 0
 196:	30 e0       	ldi	r19, 0x00	; 0
 198:	48 e4       	ldi	r20, 0x48	; 72
 19a:	52 e4       	ldi	r21, 0x42	; 66
 19c:	31 d2       	rcall	.+1122   	; 0x600 <__mulsf3>
 19e:	20 e0       	ldi	r18, 0x00	; 0
 1a0:	30 e0       	ldi	r19, 0x00	; 0
 1a2:	40 e8       	ldi	r20, 0x80	; 128
 1a4:	5a e3       	ldi	r21, 0x3A	; 58
 1a6:	2c d2       	rcall	.+1112   	; 0x600 <__mulsf3>
 1a8:	20 e0       	ldi	r18, 0x00	; 0
 1aa:	30 e0       	ldi	r19, 0x00	; 0
 1ac:	48 ec       	ldi	r20, 0xC8	; 200
 1ae:	52 e4       	ldi	r21, 0x42	; 66
 1b0:	27 d2       	rcall	.+1102   	; 0x600 <__mulsf3>
 1b2:	20 e0       	ldi	r18, 0x00	; 0
 1b4:	30 e0       	ldi	r19, 0x00	; 0
 1b6:	4a ef       	ldi	r20, 0xFA	; 250
 1b8:	53 e4       	ldi	r21, 0x43	; 67
 1ba:	96 d0       	rcall	.+300    	; 0x2e8 <__subsf3>
 1bc:	20 e0       	ldi	r18, 0x00	; 0
 1be:	30 e0       	ldi	r19, 0x00	; 0
 1c0:	40 e2       	ldi	r20, 0x20	; 32
 1c2:	51 e4       	ldi	r21, 0x41	; 65
 1c4:	f6 d0       	rcall	.+492    	; 0x3b2 <__divsf3>
 1c6:	60 93 04 02 	sts	0x0204, r22	; 0x800204 <degree>
 1ca:	70 93 05 02 	sts	0x0205, r23	; 0x800205 <degree+0x1>
 1ce:	80 93 06 02 	sts	0x0206, r24	; 0x800206 <degree+0x2>
 1d2:	90 93 07 02 	sts	0x0207, r25	; 0x800207 <degree+0x3>
	int16_t temp = (int16_t)degree;
 1d6:	55 d1       	rcall	.+682    	; 0x482 <__fixsfsi>
 1d8:	cb 01       	movw	r24, r22
	return(temp);
}
 1da:	08 95       	ret

000001dc <__vector_29>:
 1dc:	1f 92       	push	r1

ISR(ADC_vect){
 1de:	0f 92       	push	r0
 1e0:	0f b6       	in	r0, 0x3f	; 63
 1e2:	0f 92       	push	r0
 1e4:	11 24       	eor	r1, r1
 1e6:	0b b6       	in	r0, 0x3b	; 59
 1e8:	0f 92       	push	r0
 1ea:	2f 93       	push	r18
 1ec:	3f 93       	push	r19
 1ee:	4f 93       	push	r20
 1f0:	5f 93       	push	r21
 1f2:	6f 93       	push	r22
 1f4:	7f 93       	push	r23
 1f6:	8f 93       	push	r24
 1f8:	9f 93       	push	r25
 1fa:	af 93       	push	r26
 1fc:	bf 93       	push	r27
 1fe:	ef 93       	push	r30
 200:	ff 93       	push	r31
	sample=ADC;
 202:	60 91 78 00 	lds	r22, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7c0078>
 206:	70 91 79 00 	lds	r23, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7c0079>
 20a:	80 e0       	ldi	r24, 0x00	; 0
 20c:	90 e0       	ldi	r25, 0x00	; 0
 20e:	6a d1       	rcall	.+724    	; 0x4e4 <__floatunsisf>
 210:	60 93 08 02 	sts	0x0208, r22	; 0x800208 <sample>
 214:	70 93 09 02 	sts	0x0209, r23	; 0x800209 <sample+0x1>
 218:	80 93 0a 02 	sts	0x020A, r24	; 0x80020a <sample+0x2>
 21c:	90 93 0b 02 	sts	0x020B, r25	; 0x80020b <sample+0x3>
}
 220:	ff 91       	pop	r31
 222:	ef 91       	pop	r30
 224:	bf 91       	pop	r27
 226:	af 91       	pop	r26
 228:	9f 91       	pop	r25
 22a:	8f 91       	pop	r24
 22c:	7f 91       	pop	r23
 22e:	6f 91       	pop	r22
 230:	5f 91       	pop	r21
 232:	4f 91       	pop	r20
 234:	3f 91       	pop	r19
 236:	2f 91       	pop	r18
 238:	0f 90       	pop	r0
 23a:	0b be       	out	0x3b, r0	; 59
 23c:	0f 90       	pop	r0
 23e:	0f be       	out	0x3f, r0	; 63
 240:	0f 90       	pop	r0
 242:	1f 90       	pop	r1
 244:	18 95       	reti

00000246 <__vector_17>:

ISR(TIMER1_COMPA_vect)
{
 246:	1f 92       	push	r1
 248:	0f 92       	push	r0
 24a:	0f b6       	in	r0, 0x3f	; 63
 24c:	0f 92       	push	r0
 24e:	11 24       	eor	r1, r1
 250:	0b b6       	in	r0, 0x3b	; 59
 252:	0f 92       	push	r0
 254:	2f 93       	push	r18
 256:	3f 93       	push	r19
 258:	4f 93       	push	r20
 25a:	5f 93       	push	r21
 25c:	6f 93       	push	r22
 25e:	7f 93       	push	r23
 260:	8f 93       	push	r24
 262:	9f 93       	push	r25
 264:	af 93       	push	r26
 266:	bf 93       	push	r27
 268:	ef 93       	push	r30
 26a:	ff 93       	push	r31
	adc_read();
 26c:	82 df       	rcall	.-252    	; 0x172 <adc_read>
	temperature=temp_convertToCelcius();
 26e:	8b df       	rcall	.-234    	; 0x186 <temp_convertToCelcius>
 270:	90 93 03 02 	sts	0x0203, r25	; 0x800203 <temperature+0x1>
 274:	80 93 02 02 	sts	0x0202, r24	; 0x800202 <temperature>
	lightbar_showTemp(temperature);
 278:	1b d0       	rcall	.+54     	; 0x2b0 <lightbar_showTemp>
 27a:	ff 91       	pop	r31
 27c:	ef 91       	pop	r30
 27e:	bf 91       	pop	r27
 280:	af 91       	pop	r26
 282:	9f 91       	pop	r25
 284:	8f 91       	pop	r24
 286:	7f 91       	pop	r23
 288:	6f 91       	pop	r22
 28a:	5f 91       	pop	r21
 28c:	4f 91       	pop	r20
 28e:	3f 91       	pop	r19
 290:	2f 91       	pop	r18
 292:	0f 90       	pop	r0
 294:	0b be       	out	0x3b, r0	; 59
 296:	0f 90       	pop	r0
 298:	0f be       	out	0x3f, r0	; 63
 29a:	0f 90       	pop	r0
 29c:	1f 90       	pop	r1
 29e:	18 95       	reti

000002a0 <main>:
uint16_t temperature;
		
int main(void)
{	
	// initialize timer
	lightbar_init();
 2a0:	03 d0       	rcall	.+6      	; 0x2a8 <lightbar_init>
	time_init();
 2a2:	33 df       	rcall	.-410    	; 0x10a <time_init>
	adc_init();	
 2a4:	48 df       	rcall	.-368    	; 0x136 <adc_init>
 2a6:	ff cf       	rjmp	.-2      	; 0x2a6 <main+0x6>

000002a8 <lightbar_init>:
#include <avr/interrupt.h>

void lightbar_init()
{
	//PORTA output
	DDRA = 0xff;
 2a8:	8f ef       	ldi	r24, 0xFF	; 255
 2aa:	81 b9       	out	0x01, r24	; 1
	PORTA = 0xff;
 2ac:	82 b9       	out	0x02, r24	; 2
 2ae:	08 95       	ret

000002b0 <lightbar_showTemp>:

void lightbar_showTemp(uint16_t temp)
{
	uint8_t nbOfLed;
	uint8_t i=0;
	PORTA |= 0xff;
 2b0:	22 b1       	in	r18, 0x02	; 2
 2b2:	2f ef       	ldi	r18, 0xFF	; 255
 2b4:	22 b9       	out	0x02, r18	; 2
	if (temp >= 18)
 2b6:	82 31       	cpi	r24, 0x12	; 18
 2b8:	91 05       	cpc	r25, r1
 2ba:	a8 f0       	brcs	.+42     	; 0x2e6 <lightbar_showTemp+0x36>
	{
		nbOfLed = temp-17;
 2bc:	81 51       	subi	r24, 0x11	; 17
		if (nbOfLed>8)
 2be:	89 30       	cpi	r24, 0x09	; 9
 2c0:	08 f0       	brcs	.+2      	; 0x2c4 <lightbar_showTemp+0x14>
		{
			nbOfLed=8;
 2c2:	88 e0       	ldi	r24, 0x08	; 8
 2c4:	90 e0       	ldi	r25, 0x00	; 0
 2c6:	0d c0       	rjmp	.+26     	; 0x2e2 <lightbar_showTemp+0x32>
		}
		for(i;i<nbOfLed;i++)
		{
			PORTA &= ~(1 << i);
 2c8:	42 b1       	in	r20, 0x02	; 2
 2ca:	21 e0       	ldi	r18, 0x01	; 1
 2cc:	30 e0       	ldi	r19, 0x00	; 0
 2ce:	09 2e       	mov	r0, r25
 2d0:	02 c0       	rjmp	.+4      	; 0x2d6 <lightbar_showTemp+0x26>
 2d2:	22 0f       	add	r18, r18
 2d4:	33 1f       	adc	r19, r19
 2d6:	0a 94       	dec	r0
 2d8:	e2 f7       	brpl	.-8      	; 0x2d2 <lightbar_showTemp+0x22>
 2da:	20 95       	com	r18
 2dc:	24 23       	and	r18, r20
 2de:	22 b9       	out	0x02, r18	; 2
		nbOfLed = temp-17;
		if (nbOfLed>8)
		{
			nbOfLed=8;
		}
		for(i;i<nbOfLed;i++)
 2e0:	9f 5f       	subi	r25, 0xFF	; 255
 2e2:	98 17       	cp	r25, r24
 2e4:	88 f3       	brcs	.-30     	; 0x2c8 <lightbar_showTemp+0x18>
 2e6:	08 95       	ret

000002e8 <__subsf3>:
 2e8:	50 58       	subi	r21, 0x80	; 128

000002ea <__addsf3>:
 2ea:	bb 27       	eor	r27, r27
 2ec:	aa 27       	eor	r26, r26
 2ee:	0e d0       	rcall	.+28     	; 0x30c <__addsf3x>
 2f0:	4d c1       	rjmp	.+666    	; 0x58c <__fp_round>
 2f2:	3e d1       	rcall	.+636    	; 0x570 <__fp_pscA>
 2f4:	30 f0       	brcs	.+12     	; 0x302 <__addsf3+0x18>
 2f6:	43 d1       	rcall	.+646    	; 0x57e <__fp_pscB>
 2f8:	20 f0       	brcs	.+8      	; 0x302 <__addsf3+0x18>
 2fa:	31 f4       	brne	.+12     	; 0x308 <__addsf3+0x1e>
 2fc:	9f 3f       	cpi	r25, 0xFF	; 255
 2fe:	11 f4       	brne	.+4      	; 0x304 <__addsf3+0x1a>
 300:	1e f4       	brtc	.+6      	; 0x308 <__addsf3+0x1e>
 302:	33 c1       	rjmp	.+614    	; 0x56a <__fp_nan>
 304:	0e f4       	brtc	.+2      	; 0x308 <__addsf3+0x1e>
 306:	e0 95       	com	r30
 308:	e7 fb       	bst	r30, 7
 30a:	29 c1       	rjmp	.+594    	; 0x55e <__fp_inf>

0000030c <__addsf3x>:
 30c:	e9 2f       	mov	r30, r25
 30e:	4f d1       	rcall	.+670    	; 0x5ae <__fp_split3>
 310:	80 f3       	brcs	.-32     	; 0x2f2 <__addsf3+0x8>
 312:	ba 17       	cp	r27, r26
 314:	62 07       	cpc	r22, r18
 316:	73 07       	cpc	r23, r19
 318:	84 07       	cpc	r24, r20
 31a:	95 07       	cpc	r25, r21
 31c:	18 f0       	brcs	.+6      	; 0x324 <__addsf3x+0x18>
 31e:	71 f4       	brne	.+28     	; 0x33c <__addsf3x+0x30>
 320:	9e f5       	brtc	.+102    	; 0x388 <__addsf3x+0x7c>
 322:	67 c1       	rjmp	.+718    	; 0x5f2 <__fp_zero>
 324:	0e f4       	brtc	.+2      	; 0x328 <__addsf3x+0x1c>
 326:	e0 95       	com	r30
 328:	0b 2e       	mov	r0, r27
 32a:	ba 2f       	mov	r27, r26
 32c:	a0 2d       	mov	r26, r0
 32e:	0b 01       	movw	r0, r22
 330:	b9 01       	movw	r22, r18
 332:	90 01       	movw	r18, r0
 334:	0c 01       	movw	r0, r24
 336:	ca 01       	movw	r24, r20
 338:	a0 01       	movw	r20, r0
 33a:	11 24       	eor	r1, r1
 33c:	ff 27       	eor	r31, r31
 33e:	59 1b       	sub	r21, r25
 340:	99 f0       	breq	.+38     	; 0x368 <__addsf3x+0x5c>
 342:	59 3f       	cpi	r21, 0xF9	; 249
 344:	50 f4       	brcc	.+20     	; 0x35a <__addsf3x+0x4e>
 346:	50 3e       	cpi	r21, 0xE0	; 224
 348:	68 f1       	brcs	.+90     	; 0x3a4 <__addsf3x+0x98>
 34a:	1a 16       	cp	r1, r26
 34c:	f0 40       	sbci	r31, 0x00	; 0
 34e:	a2 2f       	mov	r26, r18
 350:	23 2f       	mov	r18, r19
 352:	34 2f       	mov	r19, r20
 354:	44 27       	eor	r20, r20
 356:	58 5f       	subi	r21, 0xF8	; 248
 358:	f3 cf       	rjmp	.-26     	; 0x340 <__addsf3x+0x34>
 35a:	46 95       	lsr	r20
 35c:	37 95       	ror	r19
 35e:	27 95       	ror	r18
 360:	a7 95       	ror	r26
 362:	f0 40       	sbci	r31, 0x00	; 0
 364:	53 95       	inc	r21
 366:	c9 f7       	brne	.-14     	; 0x35a <__addsf3x+0x4e>
 368:	7e f4       	brtc	.+30     	; 0x388 <__addsf3x+0x7c>
 36a:	1f 16       	cp	r1, r31
 36c:	ba 0b       	sbc	r27, r26
 36e:	62 0b       	sbc	r22, r18
 370:	73 0b       	sbc	r23, r19
 372:	84 0b       	sbc	r24, r20
 374:	ba f0       	brmi	.+46     	; 0x3a4 <__addsf3x+0x98>
 376:	91 50       	subi	r25, 0x01	; 1
 378:	a1 f0       	breq	.+40     	; 0x3a2 <__addsf3x+0x96>
 37a:	ff 0f       	add	r31, r31
 37c:	bb 1f       	adc	r27, r27
 37e:	66 1f       	adc	r22, r22
 380:	77 1f       	adc	r23, r23
 382:	88 1f       	adc	r24, r24
 384:	c2 f7       	brpl	.-16     	; 0x376 <__addsf3x+0x6a>
 386:	0e c0       	rjmp	.+28     	; 0x3a4 <__addsf3x+0x98>
 388:	ba 0f       	add	r27, r26
 38a:	62 1f       	adc	r22, r18
 38c:	73 1f       	adc	r23, r19
 38e:	84 1f       	adc	r24, r20
 390:	48 f4       	brcc	.+18     	; 0x3a4 <__addsf3x+0x98>
 392:	87 95       	ror	r24
 394:	77 95       	ror	r23
 396:	67 95       	ror	r22
 398:	b7 95       	ror	r27
 39a:	f7 95       	ror	r31
 39c:	9e 3f       	cpi	r25, 0xFE	; 254
 39e:	08 f0       	brcs	.+2      	; 0x3a2 <__addsf3x+0x96>
 3a0:	b3 cf       	rjmp	.-154    	; 0x308 <__addsf3+0x1e>
 3a2:	93 95       	inc	r25
 3a4:	88 0f       	add	r24, r24
 3a6:	08 f0       	brcs	.+2      	; 0x3aa <__addsf3x+0x9e>
 3a8:	99 27       	eor	r25, r25
 3aa:	ee 0f       	add	r30, r30
 3ac:	97 95       	ror	r25
 3ae:	87 95       	ror	r24
 3b0:	08 95       	ret

000003b2 <__divsf3>:
 3b2:	0c d0       	rcall	.+24     	; 0x3cc <__divsf3x>
 3b4:	eb c0       	rjmp	.+470    	; 0x58c <__fp_round>
 3b6:	e3 d0       	rcall	.+454    	; 0x57e <__fp_pscB>
 3b8:	40 f0       	brcs	.+16     	; 0x3ca <__divsf3+0x18>
 3ba:	da d0       	rcall	.+436    	; 0x570 <__fp_pscA>
 3bc:	30 f0       	brcs	.+12     	; 0x3ca <__divsf3+0x18>
 3be:	21 f4       	brne	.+8      	; 0x3c8 <__divsf3+0x16>
 3c0:	5f 3f       	cpi	r21, 0xFF	; 255
 3c2:	19 f0       	breq	.+6      	; 0x3ca <__divsf3+0x18>
 3c4:	cc c0       	rjmp	.+408    	; 0x55e <__fp_inf>
 3c6:	51 11       	cpse	r21, r1
 3c8:	15 c1       	rjmp	.+554    	; 0x5f4 <__fp_szero>
 3ca:	cf c0       	rjmp	.+414    	; 0x56a <__fp_nan>

000003cc <__divsf3x>:
 3cc:	f0 d0       	rcall	.+480    	; 0x5ae <__fp_split3>
 3ce:	98 f3       	brcs	.-26     	; 0x3b6 <__divsf3+0x4>

000003d0 <__divsf3_pse>:
 3d0:	99 23       	and	r25, r25
 3d2:	c9 f3       	breq	.-14     	; 0x3c6 <__divsf3+0x14>
 3d4:	55 23       	and	r21, r21
 3d6:	b1 f3       	breq	.-20     	; 0x3c4 <__divsf3+0x12>
 3d8:	95 1b       	sub	r25, r21
 3da:	55 0b       	sbc	r21, r21
 3dc:	bb 27       	eor	r27, r27
 3de:	aa 27       	eor	r26, r26
 3e0:	62 17       	cp	r22, r18
 3e2:	73 07       	cpc	r23, r19
 3e4:	84 07       	cpc	r24, r20
 3e6:	38 f0       	brcs	.+14     	; 0x3f6 <__divsf3_pse+0x26>
 3e8:	9f 5f       	subi	r25, 0xFF	; 255
 3ea:	5f 4f       	sbci	r21, 0xFF	; 255
 3ec:	22 0f       	add	r18, r18
 3ee:	33 1f       	adc	r19, r19
 3f0:	44 1f       	adc	r20, r20
 3f2:	aa 1f       	adc	r26, r26
 3f4:	a9 f3       	breq	.-22     	; 0x3e0 <__divsf3_pse+0x10>
 3f6:	33 d0       	rcall	.+102    	; 0x45e <__LOCK_REGION_LENGTH__+0x5e>
 3f8:	0e 2e       	mov	r0, r30
 3fa:	3a f0       	brmi	.+14     	; 0x40a <__LOCK_REGION_LENGTH__+0xa>
 3fc:	e0 e8       	ldi	r30, 0x80	; 128
 3fe:	30 d0       	rcall	.+96     	; 0x460 <__LOCK_REGION_LENGTH__+0x60>
 400:	91 50       	subi	r25, 0x01	; 1
 402:	50 40       	sbci	r21, 0x00	; 0
 404:	e6 95       	lsr	r30
 406:	00 1c       	adc	r0, r0
 408:	ca f7       	brpl	.-14     	; 0x3fc <__divsf3_pse+0x2c>
 40a:	29 d0       	rcall	.+82     	; 0x45e <__LOCK_REGION_LENGTH__+0x5e>
 40c:	fe 2f       	mov	r31, r30
 40e:	27 d0       	rcall	.+78     	; 0x45e <__LOCK_REGION_LENGTH__+0x5e>
 410:	66 0f       	add	r22, r22
 412:	77 1f       	adc	r23, r23
 414:	88 1f       	adc	r24, r24
 416:	bb 1f       	adc	r27, r27
 418:	26 17       	cp	r18, r22
 41a:	37 07       	cpc	r19, r23
 41c:	48 07       	cpc	r20, r24
 41e:	ab 07       	cpc	r26, r27
 420:	b0 e8       	ldi	r27, 0x80	; 128
 422:	09 f0       	breq	.+2      	; 0x426 <__LOCK_REGION_LENGTH__+0x26>
 424:	bb 0b       	sbc	r27, r27
 426:	80 2d       	mov	r24, r0
 428:	bf 01       	movw	r22, r30
 42a:	ff 27       	eor	r31, r31
 42c:	93 58       	subi	r25, 0x83	; 131
 42e:	5f 4f       	sbci	r21, 0xFF	; 255
 430:	2a f0       	brmi	.+10     	; 0x43c <__LOCK_REGION_LENGTH__+0x3c>
 432:	9e 3f       	cpi	r25, 0xFE	; 254
 434:	51 05       	cpc	r21, r1
 436:	68 f0       	brcs	.+26     	; 0x452 <__LOCK_REGION_LENGTH__+0x52>
 438:	92 c0       	rjmp	.+292    	; 0x55e <__fp_inf>
 43a:	dc c0       	rjmp	.+440    	; 0x5f4 <__fp_szero>
 43c:	5f 3f       	cpi	r21, 0xFF	; 255
 43e:	ec f3       	brlt	.-6      	; 0x43a <__LOCK_REGION_LENGTH__+0x3a>
 440:	98 3e       	cpi	r25, 0xE8	; 232
 442:	dc f3       	brlt	.-10     	; 0x43a <__LOCK_REGION_LENGTH__+0x3a>
 444:	86 95       	lsr	r24
 446:	77 95       	ror	r23
 448:	67 95       	ror	r22
 44a:	b7 95       	ror	r27
 44c:	f7 95       	ror	r31
 44e:	9f 5f       	subi	r25, 0xFF	; 255
 450:	c9 f7       	brne	.-14     	; 0x444 <__LOCK_REGION_LENGTH__+0x44>
 452:	88 0f       	add	r24, r24
 454:	91 1d       	adc	r25, r1
 456:	96 95       	lsr	r25
 458:	87 95       	ror	r24
 45a:	97 f9       	bld	r25, 7
 45c:	08 95       	ret
 45e:	e1 e0       	ldi	r30, 0x01	; 1
 460:	66 0f       	add	r22, r22
 462:	77 1f       	adc	r23, r23
 464:	88 1f       	adc	r24, r24
 466:	bb 1f       	adc	r27, r27
 468:	62 17       	cp	r22, r18
 46a:	73 07       	cpc	r23, r19
 46c:	84 07       	cpc	r24, r20
 46e:	ba 07       	cpc	r27, r26
 470:	20 f0       	brcs	.+8      	; 0x47a <__LOCK_REGION_LENGTH__+0x7a>
 472:	62 1b       	sub	r22, r18
 474:	73 0b       	sbc	r23, r19
 476:	84 0b       	sbc	r24, r20
 478:	ba 0b       	sbc	r27, r26
 47a:	ee 1f       	adc	r30, r30
 47c:	88 f7       	brcc	.-30     	; 0x460 <__LOCK_REGION_LENGTH__+0x60>
 47e:	e0 95       	com	r30
 480:	08 95       	ret

00000482 <__fixsfsi>:
 482:	04 d0       	rcall	.+8      	; 0x48c <__fixunssfsi>
 484:	68 94       	set
 486:	b1 11       	cpse	r27, r1
 488:	b5 c0       	rjmp	.+362    	; 0x5f4 <__fp_szero>
 48a:	08 95       	ret

0000048c <__fixunssfsi>:
 48c:	98 d0       	rcall	.+304    	; 0x5be <__fp_splitA>
 48e:	88 f0       	brcs	.+34     	; 0x4b2 <__fixunssfsi+0x26>
 490:	9f 57       	subi	r25, 0x7F	; 127
 492:	90 f0       	brcs	.+36     	; 0x4b8 <__fixunssfsi+0x2c>
 494:	b9 2f       	mov	r27, r25
 496:	99 27       	eor	r25, r25
 498:	b7 51       	subi	r27, 0x17	; 23
 49a:	a0 f0       	brcs	.+40     	; 0x4c4 <__fixunssfsi+0x38>
 49c:	d1 f0       	breq	.+52     	; 0x4d2 <__fixunssfsi+0x46>
 49e:	66 0f       	add	r22, r22
 4a0:	77 1f       	adc	r23, r23
 4a2:	88 1f       	adc	r24, r24
 4a4:	99 1f       	adc	r25, r25
 4a6:	1a f0       	brmi	.+6      	; 0x4ae <__fixunssfsi+0x22>
 4a8:	ba 95       	dec	r27
 4aa:	c9 f7       	brne	.-14     	; 0x49e <__fixunssfsi+0x12>
 4ac:	12 c0       	rjmp	.+36     	; 0x4d2 <__fixunssfsi+0x46>
 4ae:	b1 30       	cpi	r27, 0x01	; 1
 4b0:	81 f0       	breq	.+32     	; 0x4d2 <__fixunssfsi+0x46>
 4b2:	9f d0       	rcall	.+318    	; 0x5f2 <__fp_zero>
 4b4:	b1 e0       	ldi	r27, 0x01	; 1
 4b6:	08 95       	ret
 4b8:	9c c0       	rjmp	.+312    	; 0x5f2 <__fp_zero>
 4ba:	67 2f       	mov	r22, r23
 4bc:	78 2f       	mov	r23, r24
 4be:	88 27       	eor	r24, r24
 4c0:	b8 5f       	subi	r27, 0xF8	; 248
 4c2:	39 f0       	breq	.+14     	; 0x4d2 <__fixunssfsi+0x46>
 4c4:	b9 3f       	cpi	r27, 0xF9	; 249
 4c6:	cc f3       	brlt	.-14     	; 0x4ba <__fixunssfsi+0x2e>
 4c8:	86 95       	lsr	r24
 4ca:	77 95       	ror	r23
 4cc:	67 95       	ror	r22
 4ce:	b3 95       	inc	r27
 4d0:	d9 f7       	brne	.-10     	; 0x4c8 <__fixunssfsi+0x3c>
 4d2:	3e f4       	brtc	.+14     	; 0x4e2 <__fixunssfsi+0x56>
 4d4:	90 95       	com	r25
 4d6:	80 95       	com	r24
 4d8:	70 95       	com	r23
 4da:	61 95       	neg	r22
 4dc:	7f 4f       	sbci	r23, 0xFF	; 255
 4de:	8f 4f       	sbci	r24, 0xFF	; 255
 4e0:	9f 4f       	sbci	r25, 0xFF	; 255
 4e2:	08 95       	ret

000004e4 <__floatunsisf>:
 4e4:	e8 94       	clt
 4e6:	09 c0       	rjmp	.+18     	; 0x4fa <__floatsisf+0x12>

000004e8 <__floatsisf>:
 4e8:	97 fb       	bst	r25, 7
 4ea:	3e f4       	brtc	.+14     	; 0x4fa <__floatsisf+0x12>
 4ec:	90 95       	com	r25
 4ee:	80 95       	com	r24
 4f0:	70 95       	com	r23
 4f2:	61 95       	neg	r22
 4f4:	7f 4f       	sbci	r23, 0xFF	; 255
 4f6:	8f 4f       	sbci	r24, 0xFF	; 255
 4f8:	9f 4f       	sbci	r25, 0xFF	; 255
 4fa:	99 23       	and	r25, r25
 4fc:	a9 f0       	breq	.+42     	; 0x528 <__floatsisf+0x40>
 4fe:	f9 2f       	mov	r31, r25
 500:	96 e9       	ldi	r25, 0x96	; 150
 502:	bb 27       	eor	r27, r27
 504:	93 95       	inc	r25
 506:	f6 95       	lsr	r31
 508:	87 95       	ror	r24
 50a:	77 95       	ror	r23
 50c:	67 95       	ror	r22
 50e:	b7 95       	ror	r27
 510:	f1 11       	cpse	r31, r1
 512:	f8 cf       	rjmp	.-16     	; 0x504 <__floatsisf+0x1c>
 514:	fa f4       	brpl	.+62     	; 0x554 <__floatsisf+0x6c>
 516:	bb 0f       	add	r27, r27
 518:	11 f4       	brne	.+4      	; 0x51e <__floatsisf+0x36>
 51a:	60 ff       	sbrs	r22, 0
 51c:	1b c0       	rjmp	.+54     	; 0x554 <__floatsisf+0x6c>
 51e:	6f 5f       	subi	r22, 0xFF	; 255
 520:	7f 4f       	sbci	r23, 0xFF	; 255
 522:	8f 4f       	sbci	r24, 0xFF	; 255
 524:	9f 4f       	sbci	r25, 0xFF	; 255
 526:	16 c0       	rjmp	.+44     	; 0x554 <__floatsisf+0x6c>
 528:	88 23       	and	r24, r24
 52a:	11 f0       	breq	.+4      	; 0x530 <__floatsisf+0x48>
 52c:	96 e9       	ldi	r25, 0x96	; 150
 52e:	11 c0       	rjmp	.+34     	; 0x552 <__floatsisf+0x6a>
 530:	77 23       	and	r23, r23
 532:	21 f0       	breq	.+8      	; 0x53c <__floatsisf+0x54>
 534:	9e e8       	ldi	r25, 0x8E	; 142
 536:	87 2f       	mov	r24, r23
 538:	76 2f       	mov	r23, r22
 53a:	05 c0       	rjmp	.+10     	; 0x546 <__floatsisf+0x5e>
 53c:	66 23       	and	r22, r22
 53e:	71 f0       	breq	.+28     	; 0x55c <__floatsisf+0x74>
 540:	96 e8       	ldi	r25, 0x86	; 134
 542:	86 2f       	mov	r24, r22
 544:	70 e0       	ldi	r23, 0x00	; 0
 546:	60 e0       	ldi	r22, 0x00	; 0
 548:	2a f0       	brmi	.+10     	; 0x554 <__floatsisf+0x6c>
 54a:	9a 95       	dec	r25
 54c:	66 0f       	add	r22, r22
 54e:	77 1f       	adc	r23, r23
 550:	88 1f       	adc	r24, r24
 552:	da f7       	brpl	.-10     	; 0x54a <__floatsisf+0x62>
 554:	88 0f       	add	r24, r24
 556:	96 95       	lsr	r25
 558:	87 95       	ror	r24
 55a:	97 f9       	bld	r25, 7
 55c:	08 95       	ret

0000055e <__fp_inf>:
 55e:	97 f9       	bld	r25, 7
 560:	9f 67       	ori	r25, 0x7F	; 127
 562:	80 e8       	ldi	r24, 0x80	; 128
 564:	70 e0       	ldi	r23, 0x00	; 0
 566:	60 e0       	ldi	r22, 0x00	; 0
 568:	08 95       	ret

0000056a <__fp_nan>:
 56a:	9f ef       	ldi	r25, 0xFF	; 255
 56c:	80 ec       	ldi	r24, 0xC0	; 192
 56e:	08 95       	ret

00000570 <__fp_pscA>:
 570:	00 24       	eor	r0, r0
 572:	0a 94       	dec	r0
 574:	16 16       	cp	r1, r22
 576:	17 06       	cpc	r1, r23
 578:	18 06       	cpc	r1, r24
 57a:	09 06       	cpc	r0, r25
 57c:	08 95       	ret

0000057e <__fp_pscB>:
 57e:	00 24       	eor	r0, r0
 580:	0a 94       	dec	r0
 582:	12 16       	cp	r1, r18
 584:	13 06       	cpc	r1, r19
 586:	14 06       	cpc	r1, r20
 588:	05 06       	cpc	r0, r21
 58a:	08 95       	ret

0000058c <__fp_round>:
 58c:	09 2e       	mov	r0, r25
 58e:	03 94       	inc	r0
 590:	00 0c       	add	r0, r0
 592:	11 f4       	brne	.+4      	; 0x598 <__fp_round+0xc>
 594:	88 23       	and	r24, r24
 596:	52 f0       	brmi	.+20     	; 0x5ac <__fp_round+0x20>
 598:	bb 0f       	add	r27, r27
 59a:	40 f4       	brcc	.+16     	; 0x5ac <__fp_round+0x20>
 59c:	bf 2b       	or	r27, r31
 59e:	11 f4       	brne	.+4      	; 0x5a4 <__fp_round+0x18>
 5a0:	60 ff       	sbrs	r22, 0
 5a2:	04 c0       	rjmp	.+8      	; 0x5ac <__fp_round+0x20>
 5a4:	6f 5f       	subi	r22, 0xFF	; 255
 5a6:	7f 4f       	sbci	r23, 0xFF	; 255
 5a8:	8f 4f       	sbci	r24, 0xFF	; 255
 5aa:	9f 4f       	sbci	r25, 0xFF	; 255
 5ac:	08 95       	ret

000005ae <__fp_split3>:
 5ae:	57 fd       	sbrc	r21, 7
 5b0:	90 58       	subi	r25, 0x80	; 128
 5b2:	44 0f       	add	r20, r20
 5b4:	55 1f       	adc	r21, r21
 5b6:	59 f0       	breq	.+22     	; 0x5ce <__fp_splitA+0x10>
 5b8:	5f 3f       	cpi	r21, 0xFF	; 255
 5ba:	71 f0       	breq	.+28     	; 0x5d8 <__fp_splitA+0x1a>
 5bc:	47 95       	ror	r20

000005be <__fp_splitA>:
 5be:	88 0f       	add	r24, r24
 5c0:	97 fb       	bst	r25, 7
 5c2:	99 1f       	adc	r25, r25
 5c4:	61 f0       	breq	.+24     	; 0x5de <__fp_splitA+0x20>
 5c6:	9f 3f       	cpi	r25, 0xFF	; 255
 5c8:	79 f0       	breq	.+30     	; 0x5e8 <__fp_splitA+0x2a>
 5ca:	87 95       	ror	r24
 5cc:	08 95       	ret
 5ce:	12 16       	cp	r1, r18
 5d0:	13 06       	cpc	r1, r19
 5d2:	14 06       	cpc	r1, r20
 5d4:	55 1f       	adc	r21, r21
 5d6:	f2 cf       	rjmp	.-28     	; 0x5bc <__fp_split3+0xe>
 5d8:	46 95       	lsr	r20
 5da:	f1 df       	rcall	.-30     	; 0x5be <__fp_splitA>
 5dc:	08 c0       	rjmp	.+16     	; 0x5ee <__fp_splitA+0x30>
 5de:	16 16       	cp	r1, r22
 5e0:	17 06       	cpc	r1, r23
 5e2:	18 06       	cpc	r1, r24
 5e4:	99 1f       	adc	r25, r25
 5e6:	f1 cf       	rjmp	.-30     	; 0x5ca <__fp_splitA+0xc>
 5e8:	86 95       	lsr	r24
 5ea:	71 05       	cpc	r23, r1
 5ec:	61 05       	cpc	r22, r1
 5ee:	08 94       	sec
 5f0:	08 95       	ret

000005f2 <__fp_zero>:
 5f2:	e8 94       	clt

000005f4 <__fp_szero>:
 5f4:	bb 27       	eor	r27, r27
 5f6:	66 27       	eor	r22, r22
 5f8:	77 27       	eor	r23, r23
 5fa:	cb 01       	movw	r24, r22
 5fc:	97 f9       	bld	r25, 7
 5fe:	08 95       	ret

00000600 <__mulsf3>:
 600:	0b d0       	rcall	.+22     	; 0x618 <__mulsf3x>
 602:	c4 cf       	rjmp	.-120    	; 0x58c <__fp_round>
 604:	b5 df       	rcall	.-150    	; 0x570 <__fp_pscA>
 606:	28 f0       	brcs	.+10     	; 0x612 <__mulsf3+0x12>
 608:	ba df       	rcall	.-140    	; 0x57e <__fp_pscB>
 60a:	18 f0       	brcs	.+6      	; 0x612 <__mulsf3+0x12>
 60c:	95 23       	and	r25, r21
 60e:	09 f0       	breq	.+2      	; 0x612 <__mulsf3+0x12>
 610:	a6 cf       	rjmp	.-180    	; 0x55e <__fp_inf>
 612:	ab cf       	rjmp	.-170    	; 0x56a <__fp_nan>
 614:	11 24       	eor	r1, r1
 616:	ee cf       	rjmp	.-36     	; 0x5f4 <__fp_szero>

00000618 <__mulsf3x>:
 618:	ca df       	rcall	.-108    	; 0x5ae <__fp_split3>
 61a:	a0 f3       	brcs	.-24     	; 0x604 <__mulsf3+0x4>

0000061c <__mulsf3_pse>:
 61c:	95 9f       	mul	r25, r21
 61e:	d1 f3       	breq	.-12     	; 0x614 <__mulsf3+0x14>
 620:	95 0f       	add	r25, r21
 622:	50 e0       	ldi	r21, 0x00	; 0
 624:	55 1f       	adc	r21, r21
 626:	62 9f       	mul	r22, r18
 628:	f0 01       	movw	r30, r0
 62a:	72 9f       	mul	r23, r18
 62c:	bb 27       	eor	r27, r27
 62e:	f0 0d       	add	r31, r0
 630:	b1 1d       	adc	r27, r1
 632:	63 9f       	mul	r22, r19
 634:	aa 27       	eor	r26, r26
 636:	f0 0d       	add	r31, r0
 638:	b1 1d       	adc	r27, r1
 63a:	aa 1f       	adc	r26, r26
 63c:	64 9f       	mul	r22, r20
 63e:	66 27       	eor	r22, r22
 640:	b0 0d       	add	r27, r0
 642:	a1 1d       	adc	r26, r1
 644:	66 1f       	adc	r22, r22
 646:	82 9f       	mul	r24, r18
 648:	22 27       	eor	r18, r18
 64a:	b0 0d       	add	r27, r0
 64c:	a1 1d       	adc	r26, r1
 64e:	62 1f       	adc	r22, r18
 650:	73 9f       	mul	r23, r19
 652:	b0 0d       	add	r27, r0
 654:	a1 1d       	adc	r26, r1
 656:	62 1f       	adc	r22, r18
 658:	83 9f       	mul	r24, r19
 65a:	a0 0d       	add	r26, r0
 65c:	61 1d       	adc	r22, r1
 65e:	22 1f       	adc	r18, r18
 660:	74 9f       	mul	r23, r20
 662:	33 27       	eor	r19, r19
 664:	a0 0d       	add	r26, r0
 666:	61 1d       	adc	r22, r1
 668:	23 1f       	adc	r18, r19
 66a:	84 9f       	mul	r24, r20
 66c:	60 0d       	add	r22, r0
 66e:	21 1d       	adc	r18, r1
 670:	82 2f       	mov	r24, r18
 672:	76 2f       	mov	r23, r22
 674:	6a 2f       	mov	r22, r26
 676:	11 24       	eor	r1, r1
 678:	9f 57       	subi	r25, 0x7F	; 127
 67a:	50 40       	sbci	r21, 0x00	; 0
 67c:	8a f0       	brmi	.+34     	; 0x6a0 <__mulsf3_pse+0x84>
 67e:	e1 f0       	breq	.+56     	; 0x6b8 <__mulsf3_pse+0x9c>
 680:	88 23       	and	r24, r24
 682:	4a f0       	brmi	.+18     	; 0x696 <__mulsf3_pse+0x7a>
 684:	ee 0f       	add	r30, r30
 686:	ff 1f       	adc	r31, r31
 688:	bb 1f       	adc	r27, r27
 68a:	66 1f       	adc	r22, r22
 68c:	77 1f       	adc	r23, r23
 68e:	88 1f       	adc	r24, r24
 690:	91 50       	subi	r25, 0x01	; 1
 692:	50 40       	sbci	r21, 0x00	; 0
 694:	a9 f7       	brne	.-22     	; 0x680 <__mulsf3_pse+0x64>
 696:	9e 3f       	cpi	r25, 0xFE	; 254
 698:	51 05       	cpc	r21, r1
 69a:	70 f0       	brcs	.+28     	; 0x6b8 <__mulsf3_pse+0x9c>
 69c:	60 cf       	rjmp	.-320    	; 0x55e <__fp_inf>
 69e:	aa cf       	rjmp	.-172    	; 0x5f4 <__fp_szero>
 6a0:	5f 3f       	cpi	r21, 0xFF	; 255
 6a2:	ec f3       	brlt	.-6      	; 0x69e <__mulsf3_pse+0x82>
 6a4:	98 3e       	cpi	r25, 0xE8	; 232
 6a6:	dc f3       	brlt	.-10     	; 0x69e <__mulsf3_pse+0x82>
 6a8:	86 95       	lsr	r24
 6aa:	77 95       	ror	r23
 6ac:	67 95       	ror	r22
 6ae:	b7 95       	ror	r27
 6b0:	f7 95       	ror	r31
 6b2:	e7 95       	ror	r30
 6b4:	9f 5f       	subi	r25, 0xFF	; 255
 6b6:	c1 f7       	brne	.-16     	; 0x6a8 <__mulsf3_pse+0x8c>
 6b8:	fe 2b       	or	r31, r30
 6ba:	88 0f       	add	r24, r24
 6bc:	91 1d       	adc	r25, r1
 6be:	96 95       	lsr	r25
 6c0:	87 95       	ror	r24
 6c2:	97 f9       	bld	r25, 7
 6c4:	08 95       	ret

000006c6 <_exit>:
 6c6:	f8 94       	cli

000006c8 <__stop_program>:
 6c8:	ff cf       	rjmp	.-2      	; 0x6c8 <__stop_program>
